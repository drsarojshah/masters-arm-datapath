-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processor is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pc_in : IN STD_LOGIC_VECTOR (31 downto 0);
    main_memory_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    main_memory_out_ap_vld : OUT STD_LOGIC;
    opcode_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    opcode_out_ap_vld : OUT STD_LOGIC;
    op_value_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    op_value_1_out_ap_vld : OUT STD_LOGIC;
    op_value_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    op_value_2_out_ap_vld : OUT STD_LOGIC;
    result_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of processor is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "processor_processor,hls_ip_2024_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.157250,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=294,HLS_SYN_LUT=580,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv11_7C0 : STD_LOGIC_VECTOR (10 downto 0) := "11111000000";
    constant ap_const_lv11_7C2 : STD_LOGIC_VECTOR (10 downto 0) := "11111000010";
    constant ap_const_lv11_344 : STD_LOGIC_VECTOR (10 downto 0) := "01101000100";
    constant ap_const_lv11_244 : STD_LOGIC_VECTOR (10 downto 0) := "01001000100";
    constant ap_const_lv11_550 : STD_LOGIC_VECTOR (10 downto 0) := "10101010000";
    constant ap_const_lv11_450 : STD_LOGIC_VECTOR (10 downto 0) := "10001010000";
    constant ap_const_lv11_658 : STD_LOGIC_VECTOR (10 downto 0) := "11001011000";
    constant ap_const_lv11_458 : STD_LOGIC_VECTOR (10 downto 0) := "10001011000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_244 : STD_LOGIC_VECTOR (9 downto 0) := "1001000100";
    constant ap_const_lv10_344 : STD_LOGIC_VECTOR (9 downto 0) := "1101000100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal main_memory_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal main_memory_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal register_file_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal register_file_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pc_in_read_reg_533 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln52_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_538 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal field_4_fu_318_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal field_4_reg_547 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal field_1_reg_553 : STD_LOGIC_VECTOR (3 downto 0);
    signal address_reg_558 : STD_LOGIC_VECTOR (3 downto 0);
    signal imm12_reg_563 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln65_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln65_reg_568 : STD_LOGIC_VECTOR (0 downto 0);
    signal opcode_fu_394_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal opcode_reg_576 : STD_LOGIC_VECTOR (10 downto 0);
    signal field_3_reg_580 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal field_5_fu_432_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal field_5_reg_596 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal address_1_fu_448_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal address_1_reg_603 : STD_LOGIC_VECTOR (3 downto 0);
    signal result_5_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_4_fu_481_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_fu_487_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_fu_493_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_1_fu_499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_fu_505_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_phi_mux_result_6_phi_fu_258_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_6_reg_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_pred156_state5 : BOOLEAN;
    signal ap_predicate_pred161_state6 : BOOLEAN;
    signal ap_predicate_pred167_state5 : BOOLEAN;
    signal ap_predicate_pred172_state5 : BOOLEAN;
    signal ap_predicate_pred177_state5 : BOOLEAN;
    signal ap_predicate_pred182_state5 : BOOLEAN;
    signal ap_predicate_pred187_state5 : BOOLEAN;
    signal ap_predicate_pred192_state5 : BOOLEAN;
    signal ap_predicate_pred210_state5 : BOOLEAN;
    signal ap_phi_mux_storemerge6_phi_fu_287_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge6_reg_284 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_predicate_pred232_state6 : BOOLEAN;
    signal zext_ln55_fu_314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln84_fu_423_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_fu_428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_fu_460_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln118_1_fu_470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_pred161_state5 : BOOLEAN;
    signal zext_ln118_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_fu_519_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_pred156_state6 : BOOLEAN;
    signal zext_ln138_fu_524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln132_fu_529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal main_memory_2_ce1_local : STD_LOGIC;
    signal main_memory_2_address1_local : STD_LOGIC_VECTOR (3 downto 0);
    signal main_memory_2_ce0_local : STD_LOGIC;
    signal main_memory_2_address0_local : STD_LOGIC_VECTOR (3 downto 0);
    signal main_memory_2_we1_local : STD_LOGIC;
    signal main_memory_2_we0_local : STD_LOGIC;
    signal register_file_1_we1_local : STD_LOGIC;
    signal register_file_1_ce1_local : STD_LOGIC;
    signal register_file_1_address1_local : STD_LOGIC_VECTOR (3 downto 0);
    signal register_file_1_we0_local : STD_LOGIC;
    signal register_file_1_d0_local : STD_LOGIC_VECTOR (31 downto 0);
    signal register_file_1_ce0_local : STD_LOGIC;
    signal register_file_1_address0_local : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_298_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln_fu_322_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln65_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_1_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_cast_fu_380_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_fu_384_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal field_1_1_fu_417_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal imm12_1_fu_438_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln121_fu_454_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln118_fu_465_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal imm12_1_cast_fu_444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln135_fu_515_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component processor_main_memory_2_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component processor_register_file_1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    main_memory_2_U : component processor_main_memory_2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => main_memory_2_address0_local,
        ce0 => main_memory_2_ce0_local,
        we0 => main_memory_2_we0_local,
        d0 => ap_phi_mux_result_6_phi_fu_258_p18,
        q0 => main_memory_2_q0,
        address1 => main_memory_2_address1_local,
        ce1 => main_memory_2_ce1_local,
        we1 => main_memory_2_we1_local,
        d1 => register_file_1_q0,
        q1 => main_memory_2_q1);

    register_file_1_U : component processor_register_file_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => register_file_1_address0_local,
        ce0 => register_file_1_ce0_local,
        we0 => register_file_1_we0_local,
        d0 => register_file_1_d0_local,
        q0 => register_file_1_q0,
        address1 => register_file_1_address1_local,
        ce1 => register_file_1_ce1_local,
        we1 => register_file_1_we1_local,
        d1 => main_memory_2_q1,
        q1 => register_file_1_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    result_6_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_predicate_pred192_state5 = ap_const_boolean_1))) then 
                result_6_reg_254 <= result_fu_505_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_predicate_pred187_state5 = ap_const_boolean_1))) then 
                result_6_reg_254 <= result_1_fu_499_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_predicate_pred182_state5 = ap_const_boolean_1))) then 
                result_6_reg_254 <= result_2_fu_493_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_predicate_pred177_state5 = ap_const_boolean_1))) then 
                result_6_reg_254 <= result_3_fu_487_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_predicate_pred172_state5 = ap_const_boolean_1))) then 
                result_6_reg_254 <= result_4_fu_481_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_predicate_pred167_state5 = ap_const_boolean_1))) then 
                result_6_reg_254 <= result_5_fu_475_p2;
            elsif ((((ap_predicate_pred210_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_pred161_state6 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_predicate_pred156_state5 = ap_const_boolean_1)))) then 
                result_6_reg_254 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    storemerge6_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                storemerge6_reg_284 <= main_memory_2_q0;
            elsif (((ap_predicate_pred232_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                storemerge6_reg_284 <= ap_phi_mux_result_6_phi_fu_258_p18;
            elsif (((opcode_reg_576 = ap_const_lv11_7C2) and (icmp_ln52_reg_538 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                storemerge6_reg_284 <= register_file_1_q1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                address_1_reg_603 <= address_1_fu_448_p3;
                    ap_predicate_pred156_state6 <= (opcode_reg_576 = ap_const_lv11_7C0);
                    ap_predicate_pred161_state6 <= (opcode_reg_576 = ap_const_lv11_7C2);
                    ap_predicate_pred232_state6 <= ((opcode_reg_576 = ap_const_lv11_458) or ((opcode_reg_576 = ap_const_lv11_658) or ((opcode_reg_576 = ap_const_lv11_450) or ((opcode_reg_576 = ap_const_lv11_550) or ((opcode_reg_576 = ap_const_lv11_244) or ((opcode_reg_576 = ap_const_lv11_344) or (not((opcode_reg_576 = ap_const_lv11_7C2)) and not((opcode_reg_576 = ap_const_lv11_7C0)))))))));
                field_5_reg_596 <= field_5_fu_432_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                address_reg_558 <= main_memory_2_q0(15 downto 12);
                field_1_reg_553 <= main_memory_2_q0(19 downto 16);
                field_3_reg_580 <= main_memory_2_q0(8 downto 5);
                field_4_reg_547 <= field_4_fu_318_p1;
                imm12_reg_563 <= main_memory_2_q0(21 downto 10);
                opcode_reg_576 <= opcode_fu_394_p3;
                or_ln65_reg_568 <= or_ln65_fu_374_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    ap_predicate_pred156_state5 <= (opcode_reg_576 = ap_const_lv11_7C0);
                    ap_predicate_pred161_state5 <= (opcode_reg_576 = ap_const_lv11_7C2);
                    ap_predicate_pred167_state5 <= (opcode_reg_576 = ap_const_lv11_344);
                    ap_predicate_pred172_state5 <= (opcode_reg_576 = ap_const_lv11_244);
                    ap_predicate_pred177_state5 <= (opcode_reg_576 = ap_const_lv11_550);
                    ap_predicate_pred182_state5 <= (opcode_reg_576 = ap_const_lv11_450);
                    ap_predicate_pred187_state5 <= (opcode_reg_576 = ap_const_lv11_658);
                    ap_predicate_pred192_state5 <= (opcode_reg_576 = ap_const_lv11_458);
                    ap_predicate_pred210_state5 <= (not((opcode_reg_576 = ap_const_lv11_458)) and not((opcode_reg_576 = ap_const_lv11_658)) and not((opcode_reg_576 = ap_const_lv11_450)) and not((opcode_reg_576 = ap_const_lv11_550)) and not((opcode_reg_576 = ap_const_lv11_244)) and not((opcode_reg_576 = ap_const_lv11_344)) and not((opcode_reg_576 = ap_const_lv11_7C2)) and not((opcode_reg_576 = ap_const_lv11_7C0)));
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln52_reg_538 <= icmp_ln52_fu_308_p2;
                pc_in_read_reg_533 <= pc_in;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln52_fu_308_p2, ap_CS_fsm_state6, ap_predicate_pred161_state6, ap_predicate_pred232_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln52_fu_308_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((icmp_ln52_fu_308_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_predicate_pred232_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_pred161_state6 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln118_fu_465_p2 <= std_logic_vector(unsigned(address_1_fu_448_p3) + unsigned(field_3_reg_580));
    add_ln121_fu_454_p2 <= std_logic_vector(unsigned(address_1_fu_448_p3) + unsigned(field_5_fu_432_p3));
    add_ln135_fu_515_p2 <= std_logic_vector(unsigned(address_1_reg_603) + unsigned(field_5_reg_596));
    address_1_fu_448_p3 <= 
        ap_const_lv4_0 when (or_ln65_reg_568(0) = '1') else 
        address_reg_558;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_result_6_phi_fu_258_p18_assign_proc : process(ap_CS_fsm_state6, result_6_reg_254, ap_predicate_pred161_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_pred161_state6 = ap_const_boolean_1))) then 
            ap_phi_mux_result_6_phi_fu_258_p18 <= ap_const_lv32_0;
        else 
            ap_phi_mux_result_6_phi_fu_258_p18 <= result_6_reg_254;
        end if; 
    end process;


    ap_phi_mux_storemerge6_phi_fu_287_p6_assign_proc : process(register_file_1_q1, icmp_ln52_reg_538, opcode_reg_576, storemerge6_reg_284, ap_CS_fsm_state9)
    begin
        if (((opcode_reg_576 = ap_const_lv11_7C2) and (icmp_ln52_reg_538 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_storemerge6_phi_fu_287_p6 <= register_file_1_q1;
        else 
            ap_phi_mux_storemerge6_phi_fu_287_p6 <= storemerge6_reg_284;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    field_1_1_fu_417_p3 <= 
        ap_const_lv4_0 when (or_ln65_reg_568(0) = '1') else 
        field_1_reg_553;
    field_4_fu_318_p1 <= main_memory_2_q0(4 - 1 downto 0);
    field_5_fu_432_p3 <= 
        ap_const_lv4_0 when (or_ln65_reg_568(0) = '1') else 
        field_4_reg_547;
    icmp_ln52_fu_308_p2 <= "1" when (signed(tmp_fu_298_p4) < signed(ap_const_lv29_1)) else "0";
    icmp_ln65_1_fu_368_p2 <= "1" when (trunc_ln_fu_322_p4 = ap_const_lv10_344) else "0";
    icmp_ln65_fu_362_p2 <= "1" when (trunc_ln_fu_322_p4 = ap_const_lv10_244) else "0";
    imm12_1_cast_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(imm12_1_fu_438_p3),32));
    imm12_1_fu_438_p3 <= 
        imm12_reg_563 when (or_ln65_reg_568(0) = '1') else 
        ap_const_lv12_0;

    main_memory_2_address0_local_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_predicate_pred232_state6, zext_ln55_fu_314_p1, zext_ln135_fu_519_p1, ap_predicate_pred156_state6, zext_ln138_fu_524_p1)
    begin
        if (((ap_predicate_pred232_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            main_memory_2_address0_local <= zext_ln138_fu_524_p1(4 - 1 downto 0);
        elsif (((ap_predicate_pred156_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            main_memory_2_address0_local <= zext_ln135_fu_519_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            main_memory_2_address0_local <= zext_ln55_fu_314_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            main_memory_2_address0_local <= ap_const_lv4_F;
        else 
            main_memory_2_address0_local <= "XXXX";
        end if; 
    end process;


    main_memory_2_address1_local_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state5, ap_predicate_pred156_state5, zext_ln121_fu_460_p1, zext_ln118_1_fu_470_p1, ap_predicate_pred161_state5)
    begin
        if (((ap_predicate_pred161_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            main_memory_2_address1_local <= zext_ln118_1_fu_470_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_predicate_pred156_state5 = ap_const_boolean_1))) then 
            main_memory_2_address1_local <= zext_ln121_fu_460_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            main_memory_2_address1_local <= ap_const_lv4_E;
        else 
            main_memory_2_address1_local <= "XXXX";
        end if; 
    end process;


    main_memory_2_ce0_local_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_predicate_pred232_state6, ap_predicate_pred156_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_predicate_pred156_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_predicate_pred232_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            main_memory_2_ce0_local <= ap_const_logic_1;
        else 
            main_memory_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    main_memory_2_ce1_local_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_predicate_pred156_state5, ap_predicate_pred161_state5)
    begin
        if ((((ap_predicate_pred161_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_predicate_pred156_state5 = ap_const_boolean_1)))) then 
            main_memory_2_ce1_local <= ap_const_logic_1;
        else 
            main_memory_2_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    main_memory_2_we0_local_assign_proc : process(ap_CS_fsm_state6, ap_predicate_pred232_state6)
    begin
        if (((ap_predicate_pred232_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            main_memory_2_we0_local <= ap_const_logic_1;
        else 
            main_memory_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    main_memory_2_we1_local_assign_proc : process(ap_CS_fsm_state5, ap_predicate_pred156_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_predicate_pred156_state5 = ap_const_boolean_1))) then 
            main_memory_2_we1_local <= ap_const_logic_1;
        else 
            main_memory_2_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    main_memory_out <= main_memory_2_q0;

    main_memory_out_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            main_memory_out_ap_vld <= ap_const_logic_1;
        else 
            main_memory_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    op_value_1_out <= register_file_1_q1;

    op_value_1_out_ap_vld_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            op_value_1_out_ap_vld <= ap_const_logic_1;
        else 
            op_value_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    op_value_2_out <= register_file_1_q0;

    op_value_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            op_value_2_out_ap_vld <= ap_const_logic_1;
        else 
            op_value_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    opcode_fu_394_p3 <= 
        trunc_ln_cast_fu_380_p1 when (or_ln65_fu_374_p2(0) = '1') else 
        tmp_1_fu_384_p4;
    opcode_out <= std_logic_vector(IEEE.numeric_std.resize(unsigned(opcode_fu_394_p3),32));

    opcode_out_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            opcode_out_ap_vld <= ap_const_logic_1;
        else 
            opcode_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln65_fu_374_p2 <= (icmp_ln65_fu_362_p2 or icmp_ln65_1_fu_368_p2);

    register_file_1_address0_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_pred161_state6, ap_predicate_pred232_state6, zext_ln85_fu_428_p1, zext_ln118_fu_511_p1, zext_ln138_fu_524_p1)
    begin
        if (((ap_predicate_pred232_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            register_file_1_address0_local <= zext_ln138_fu_524_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_pred161_state6 = ap_const_boolean_1))) then 
            register_file_1_address0_local <= zext_ln118_fu_511_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            register_file_1_address0_local <= zext_ln85_fu_428_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            register_file_1_address0_local <= ap_const_lv4_F;
        else 
            register_file_1_address0_local <= "XXXX";
        end if; 
    end process;


    register_file_1_address1_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state8, zext_ln84_fu_423_p1, zext_ln132_fu_529_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            register_file_1_address1_local <= zext_ln132_fu_529_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            register_file_1_address1_local <= zext_ln84_fu_423_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            register_file_1_address1_local <= ap_const_lv4_E;
        else 
            register_file_1_address1_local <= "XXXX";
        end if; 
    end process;


    register_file_1_ce0_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_pred161_state6, ap_predicate_pred232_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_predicate_pred232_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_pred161_state6 = ap_const_boolean_1)))) then 
            register_file_1_ce0_local <= ap_const_logic_1;
        else 
            register_file_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    register_file_1_ce1_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            register_file_1_ce1_local <= ap_const_logic_1;
        else 
            register_file_1_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    register_file_1_d0_local_assign_proc : process(main_memory_2_q0, main_memory_2_q1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_phi_mux_result_6_phi_fu_258_p18, ap_predicate_pred161_state6, ap_predicate_pred232_state6)
    begin
        if (((ap_predicate_pred232_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            register_file_1_d0_local <= ap_phi_mux_result_6_phi_fu_258_p18;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_pred161_state6 = ap_const_boolean_1))) then 
            register_file_1_d0_local <= main_memory_2_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            register_file_1_d0_local <= main_memory_2_q0;
        else 
            register_file_1_d0_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    register_file_1_we0_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state6, ap_predicate_pred161_state6, ap_predicate_pred232_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_predicate_pred232_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_pred161_state6 = ap_const_boolean_1)))) then 
            register_file_1_we0_local <= ap_const_logic_1;
        else 
            register_file_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    register_file_1_we1_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            register_file_1_we1_local <= ap_const_logic_1;
        else 
            register_file_1_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    result_1_fu_499_p2 <= std_logic_vector(unsigned(register_file_1_q0) - unsigned(register_file_1_q1));
    result_2_fu_493_p2 <= (register_file_1_q1 and register_file_1_q0);
    result_3_fu_487_p2 <= (register_file_1_q1 or register_file_1_q0);
    result_4_fu_481_p2 <= std_logic_vector(unsigned(register_file_1_q0) + unsigned(imm12_1_cast_fu_444_p1));
    result_5_fu_475_p2 <= std_logic_vector(unsigned(register_file_1_q0) - unsigned(imm12_1_cast_fu_444_p1));
    result_fu_505_p2 <= std_logic_vector(unsigned(register_file_1_q0) + unsigned(register_file_1_q1));
    result_out <= ap_phi_mux_storemerge6_phi_fu_287_p6;

    result_out_ap_vld_assign_proc : process(icmp_ln52_reg_538, ap_CS_fsm_state9)
    begin
        if (((icmp_ln52_reg_538 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            result_out_ap_vld <= ap_const_logic_1;
        else 
            result_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_384_p4 <= main_memory_2_q0(31 downto 21);
    tmp_fu_298_p4 <= pc_in(31 downto 3);
    trunc_ln_cast_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_322_p4),11));
    trunc_ln_fu_322_p4 <= main_memory_2_q0(31 downto 22);
    zext_ln118_1_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln118_fu_465_p2),64));
    zext_ln118_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(field_5_reg_596),64));
    zext_ln121_fu_460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_fu_454_p2),64));
    zext_ln132_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(field_5_reg_596),64));
    zext_ln135_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_fu_515_p2),64));
    zext_ln138_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(field_4_reg_547),64));
    zext_ln55_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pc_in_read_reg_533),64));
    zext_ln84_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(field_1_1_fu_417_p3),64));
    zext_ln85_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(field_3_reg_580),64));
end behav;
